fixssh() {
    for key in SSH_AUTH_SOCK SSH_CONNECTION SSH_CLIENT; do
        if (tmux show-environment | grep "^${key}" > /dev/null); then
            value=`tmux show-environment | grep "^${key}" | sed -e "s/^[A-Z_]*=//"`
            export ${key}="${value}"
        fi
    done
}

checkSSHAdd () {
    if [ "$(ssh-add -l)" = "The agent has no identities." ]
    then
        ssh-add
        ssh -t $1 "tmux attach || tmux new"
    else
        ssh -t $1 "tmux attach || tmux new"
    fi
}

createBranchFromMaster () {
    git checkout -- *
    git checkout master
    git fetch upstream
    git reset --hard upstream/master
    git push
    git checkout -b $1
    git push -u origin $1
}

if hash pyenv 2>/dev/null; then
    eval "$(pyenv init -)"
    export PIPENV_PYTHON=$(pyenv root)/shims/python
fi

alias nb="createBranchFromMaster $1"
alias fix="sudo service uwsgi2 restart && sudo service nginx restart"
alias sshdev="checkSSHAdd mblalock.dev.hearsaylabs.com"
alias sshlatest="checkSSHAdd latest.dev.hearsaylabs.com"
alias sshops="checkSSHAdd ops.prod.pnw.hearsaylabs.com"
alias contacts="cd ~/projects/hearsay-contacts"
alias contacts-client="cd ~/projects/hearsay-contacts-client"
alias labs="cd ~/projects/HearsayLabs"
alias helm="cd ~/projects/hearsay-helm"
alias activities="cd ~/projects/hearsay-activities"
